<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.keunsy.dbbackuptool</groupId>
    <artifactId>keunsy-db-backup-tool</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>core</module>
        <module>auto</module>
    </modules>

    <!-- 全局及版本信息 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mysql.version>5.1.29</mysql.version>
        <dbutils.version>1.6</dbutils.version>
        <slf4j.version>1.7.5</slf4j.version>
        <logback.version>1.0.13</logback.version>
        <dbunit.version>2.5.0</dbunit.version>
        <commons-lang3.version>3.1</commons-lang3.version>
        <common-collections4.version>4.0</common-collections4.version>
    </properties>

    <!-- 所有子项目都会引入的依赖 -->
    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>


        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <version>${dbutils.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version> </dependency> <dependency> <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId> <version>${slf4j.version}</version>
            </dependency> -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${common-collections4.version}</version>
        </dependency>

    </dependencies>

    <!-- 子项目显示引用时方才引入，子项目无需写version -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>


    <build>
        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.3</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <encoding>UTF8</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <archive>
                            <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <!-- 是否要把第三方jar放到manifest的classpath中 -->
                                <addClasspath>true</addClasspath>
                                <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- 应用的main class -->
                                <mainClass>BackupMain</mainClass>
                            </manifest>
                        </archive>
                        <!-- 过滤掉不希望包含在jar中的文件 -->
                        <excludes>
                            <exclude>**/config/**</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!--assembly 打包插件 命令： mvn assembly：assembly -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                    <!-- The configuration of the plugin -->
                    <configuration>
                        <!-- 指定插件配置文件位置 -->
                        <descriptors>
                            <descriptor>${project.parent.basedir}/assembly/assembly.xml</descriptor>
                        </descriptors>
                        <appendAssemblyId>false</appendAssemblyId>
                        <!-- <finalName></finalName> -->
                        <archiverConfig>
                            <encoding>${project.build.sourceEncoding}</encoding>
                        </archiverConfig>
                    </configuration>
                    <!-- 指令添加 当使用mvn package时 也能有上述效果 -->
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


</project>